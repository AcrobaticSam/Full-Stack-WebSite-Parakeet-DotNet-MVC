﻿@model Parakeet.Web.ViewModels.FilterProductsViewModel

@{ var defaultImageURL = "/Content/images/system/placeholder-image.png"; }


<div class="row mb-3 align-items-center">
    <div class="col-lg-6 mb-2 mb-lg-0">
        <p class="text-small text-muted mb-0">Showing  @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1 ) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize))  of @Model.Pager.TotalItems  results</p>
    </div>
    <div class="col-lg-6">
        <ul class="list-inline d-flex align-items-center justify-content-lg-end mb-0">
            <li class="list-inline-item text-muted mr-3"><a class="reset-anchor p-0" href="#"><i class="fas fa-th-large"></i></a></li>
            <li class="list-inline-item text-muted mr-3"><a class="reset-anchor p-0" href="#"><i class="fas fa-th"></i></a></li>
            <li class="list-inline-item">
                <select class="selectpicker ml-auto" name="sorting" data-width="200" data-style="bs-select-form-control" data-title="Default sorting">
                    <option value="default">Default sorting</option>
                    <option value="popularity">Popularity</option>
                    <option value="low-high">Price: Low to High</option>
                    <option value="high-low">Price: High to Low</option>
                </select>
            </li>
        </ul>
    </div>
</div>
<div class="row">


    @foreach (var product in Model.Products)
    {
        var imageURL = string.IsNullOrEmpty(product.ImageURL) ? defaultImageURL : product.ImageURL;
<div class="col-xl-3 col-lg-4 col-sm-6">
    <div class="product text-center">

        <div class="position-relative mb-3">
            <div class="badge text-white badge-"></div>
            <a class="d-block" href="@Url.Action("Details", "Product", new { ID = product.ID })">
                <img class="img-fluid w-100" style="width:250px; height:250px; object-fit: cover;" src="@imageURL" alt="...">
            </a>
            <div class="product-overlay">
                <ul class="mb-0 list-inline">
                    <li class="list-inline-item m-0 p-0"><a class="btn btn-sm btn-outline-dark" href="#"><i class="far fa-heart"></i></a></li>
                    <li class="list-inline-item m-0 p-0"><a class="btn btn-sm btn-dark text-white productAddToCart" data-id="@product.ID">Add to cart</a></li>
                    <li class="list-inline-item mr-0"><a class="btn btn-sm btn-outline-dark" href="#productView" data-toggle="modal"><i class="fas fa-expand"></i></a></li>
                </ul>
            </div>
        </div>
        <h6> <a class="reset-anchor" href="@Url.Action("Details", "Product", new { ID = product.ID })">  @product.Name</a></h6>
        <p class="small text-muted">$ @product.Price</p>

    </div>
</div>}

</div><!-- /.product-content -->



@if (Model.Pager != null && Model.Pager.TotalPages > 1)
{<!-- PAGINATION-->
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center justify-content-lg-end">
                            @if (Model.Pager.CurrentPage > 1)
                            {
            <li class="page-item"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage - 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink page-link"><span aria-hidden="true">«</span></a></li>
}

                            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {
                                string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;

            <li class="page-item @activeClass"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = page, sortBy = Model.SortBy, categoryID = Model.CategoryID })" title="" class="pageDataLink page-link">@page</a></li>
}


                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {

            <li class="page-item"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage + 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink page-link"><span aria-hidden="true">»</span></a></li>
}
                        </ul>
                    </nav>}



<input type="hidden" id="SearchTerm" value="@Model.SearchTerm" />
<input type="hidden" id="SortBy" value="@Model.SortBy" />
<input type="hidden" id="CategoryID" value="@Model.CategoryID" />

<script>$(".pageDataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });

    var products;
    $(".productAddToCart").click(function () {
        var existingCookieData = $.cookie('CartProducts');

        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {
            products = existingCookieData.split('-');
        }
        else {
            products = [];
        }

        var productID = $(this).attr('data-id');

        products.push(productID);

        $.cookie('CartProducts', products.join('-'), { path: '/' });

        updateCartProducts();

        swal("Done", "Product Added to Cart!", "success");
    });</script>

